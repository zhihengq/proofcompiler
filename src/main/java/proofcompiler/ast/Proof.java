package proofcompiler.ast;

import java.util.Collections;
import java.util.List;

/**
 * A proof AST generated by the parser. Immutable.
 */
public class Proof {
    public final Declarations decls;
    public final List<Line> lines;

    /**
     * `lines` should not be modified after being passed to the constructor.
     */
    public Proof(Declarations decls, List<Line> lines) {
        this.decls = decls.freeze();
        this.lines = Collections.unmodifiableList(lines);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(decls);
        sb.append("proof.\n");
        for (Line l : lines) {
            sb.append(l);
            sb.append("\n");
        }
        return sb.toString();
    }

    @Override
    public boolean equals(Object o) {
        if (!(o instanceof Proof))
            return false;
        Proof other = (Proof) o;
        return decls.equals(other.decls) && lines.equals(other.lines);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(decls, lines);
    }
}
